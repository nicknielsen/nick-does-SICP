Exercise 1.9: Each of the following two procedures defines a method for adding two positive integers in terms of the procedures inc, which increments its argument by 1, and dec, which decrements its argument by 1.

First:
(define (+ a b)
(if (= a 0) b (inc (+ (dec a) b))))

Second:
(define (+ a b)
(if (= a 0) b (+ (dec a) (inc b))))

Using the substitution model, illustrate the process generated by each procedure in evaluating (+ 4 5). Are these processes iterative or recursive?

----

First:

1. (+ 4 5) --> (if (= 4 0) 5 (inc (+ (dec 4) 5)))

  9. (if... (inc 8)) => 9, final answer

2. (+ 3 5) --> (if (= 3 0) 5 (inc (+ (dec 3) 5)))

  8. (if... (inc 7)) => 8 passed back up ^

3. (+ 2 5) --> (if (= 2 0) 5 (inc (+ (dec 2) 5)))

  7. (if... (inc 6)) => 7 passed back up ^

4. (+ 1 5) --> (if (= 1 0) 5 (inc (+ (dec 1) 5)))

  6. (if... (inc 5)) => 6, passed back up ^

5. (+ 0 5) --> (if (= 0 0) 5 (inc (+ (dec 0) 5))) => 5, which gets passed back up ^

The first process is linearly recursive. It does not use state variables to track the procedure's evolution. Instead, it uses a base case to end the recursive calls to (+ a b). Once it reaches the base, the interpreter has the information it needs to evaluate each preceding call to (+ a b).

----

Second:
1. (+ 4 5) --> (if (= 4 0) 5 (+ (dec 4) (inc 5)))

2. (+ 3 6) --> (if (= 3 0) 6 (+ (dec 3) (inc 6)))

3. (+ 2 7) --> (if (= 2 0) 7 (+ (dec 2) (inc 7)))

4. (+ 1 8) --> (if (= 1 0) 8 (+ (dec 1) (inc 8)))

5. (+ 0 9) --> (if (= 0 0) 9 (+ (dec 0) (inc 9))) => 9

The second process is iterative. It uses variable a as a state variable to count how many times 1 must be added to b before stopping iterations.